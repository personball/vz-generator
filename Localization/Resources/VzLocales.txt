# default en
MyName=personball

RootCommandDesc=VZeroSoft CLI Tools

# Initializer
InitCommandDesc=Init Settings And Templates.
InitOptListSampleDesc=list all sample names。
InitOptWithSampleDesc=specify the name of sample which you interest (can declare multiple times). will export all samples by default, --list-samples show all sample names。
VsCodeSettingsFileExistsPrompt=Please edit {0} with content:\n{1}\n
JsonDeserializeFailError=Can't load {0}, Json Deserialize Failed: {1}\n
InitSettingOptionExistsSkipWarn=WARN: option <{0}> from sample {1} already exists, settings skipped...\n

# Generator
GenerateCommandDesc=Generate Files With Specific Templates.
GTemplateFileNotFoundPrompt=There is no template file, nothing happened.\n
GMultiTplOutputToSingleFileError=There are {0} Template Files, but {1} is not end with '{2}' (not directory).
GOutputFileExistsOverridePrompt={0} is already exists, override it?

GOptConfigOptDesc=load specific setting file instead of .vz/generate.settings.json .
GOptSelectOptDesc=(Optional) run which option in settings, use quote ’‘ if contains whitespace.
GOptTplPathOptDesc=(Optional) specify file path of single template or directory contains templates.
GOptSyntaxOptDesc=(Optional) specify syntax of template.
GOptVarStringOptDesc=(Optional) fill value for string variables, --var key1=val1 --var key2=val2 can override default value of same key in the settings, will ask for missing variables.
GOptVarJsonFileOptDesc=(Optional) fill file path for json variables， --var-json-file key1=./path/to/jsonfile --var-json-file key2=./path/to/jsonfile2 can override default value of same key in the settings, will ask for missing ones.
GOptVarYamlFileOptDesc=(Optional) fill file path for yaml variables， --var-yaml-file key1=./path/to/yamlfile --var-yaml-file key2=./path/to/yamlfile2 can override default value of same key in the settings, will ask for missing ones.
GOptVarYamlFileContentContainsMultiObject=Multiple objects (separated by '---') in one yaml file is invalid! To be a variable, every object should has its own name.
GOptOutputOptDesc=(Optional) specify output path. can override the value in settings, if both not set, default is ./output。
GOptOverrideOptDesc=(Optional) declare when output file exists, override it or not. True override it; False skip it; by default, will ask for decision of each file if not declared.
GOptWatchOptDesc=(Optional) watch file changes in template folder, hot reload, render template in time (facilitate the development of templates). In watch mode, output always override exists files.

GFailedErrorResult=Generate Fail: {0}{1}{2}

GSettingTemplatePathCliPrompt=Path of Template?
GSettingTemplateVariableValueCliPrompt=Set value of {0}
GSettingTemplateVariableValueForJsonFileCliPrompt=Set Json File Path of {0}
GSettingTemplateVariableValueForYamlFileCliPrompt=Set Yaml File Path of {0}
GSettingOutputCliPrompt=Path of Output?

GSettingFileNotFound={0} Not Found! Please run init first!
GSettingFileContentIsEmpty=Settings Not Found, please update {0}
GSettingOptionNotFound=WARN: option <{0}> Not Found...
GSettingOptionChoosePrompt=Choose One (Use ↑↓)
GSettingOptionNotFoundError=Option <{0}> Not Found!

# Renamer
RenameCommandDesc=Rename file/path and replace file content with specific key-value pairs.
RTargetArgDesc=File/folder to deal with.
ROptSkipContentOptDesc=(Optional) Specify skip deal with file content.
ROptReplacePairsOptDesc=Specify key value pairs to be replaced. --replace key=value --replace key2=value2 will replace key with value, replace key2 with value2. 
ROptOutputOptDesc=Specify the output folder, always create a subfolder in form: <replace name of target> 
ROptOverrideOptDesc=(Optional) declare when output file exists, override it or not. True override it; False skip it; by default, will ask for decision of each file if not declared.
RenameFailedErrorResult=Rename Fail: {0}{1}{2}
RenameTargetNotFoundPrompt={0} Not Found!
RenameOutputIsTargetPrompt=Output path should not same as target!
RenameReplacePairsOptNotFoundPrompt=No key value pairs specified, nothing happened.
ROptIncludeOptDesc=include file name (case-insensitive). `dockerfile` is included by default.
ROptIncludeExtOptDesc=include files with specific extension, like `.txt` `.sh`, the dot can ignore, --include-ext txt --include-ext sh , the default extensions:[".coffee",".config",".cs",".cshtml",".csproj",".DOCS",".DotSettings",".DS_Store",".editorconfig",".gitignore",".html",".js",".json",".Makefile",".markdown",".md",".nuspec",".props",".ps1",".sh",".sln",".ts",".txt",".xaml",".xml",".yml"] 
ROptExcludeOptDesc=exclude file name (case-insensitive).
ROptExcludeExtOptDesc=exclude files with specific extension, like `.txt` `.sh`, the dot can ignore, --exclude-ext txt --exclude-ext sh .
ROptAllFilesOptDesc=disable files filters, ignore --include --include-ext --exclude --exclude-ext and the default included file name or extensions, just deal all the files.