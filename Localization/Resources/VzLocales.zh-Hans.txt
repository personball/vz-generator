# zh-Hans
MyName=Personball

RootCommandDesc=VZeroSoft 命令行工具

# Initializer
InitCommandDesc=初始化配置和示例模板。
InitOptListSampleDesc=列出所有可用示例名称。
InitOptWithSampleDesc=--with-sample abp --with-sample vue 可多次指定需要导出的示例名称。\n不指定则默认导出全部，可以通过 --list-samples 查看所有可用示例名称。
VsCodeSettingsFileExistsPrompt=请参考下述内容编辑 {0} 文件:\n{1}\n
JsonDeserializeFailError=无法加载 {0}, Json 反序列化失败: {1}\n
InitSettingOptionExistsSkipWarn=提示: 示例 {1} 的配置 <{0}> 已经存在, 跳过配置导出...\n

# Generator
GenerateCommandDesc=通过指定的模板来生成文件。
GTemplateFileNotFoundPrompt=未指定任何模板, 无事发生。\n
GMultiTplOutputToSingleFileError=有{0}个模板, 但 {1} 没有以 '{2}' 结尾（不是目录）。
GOutputFileExistsOverridePrompt={0} 已存在, 是否覆盖?"

GOptConfigOptDesc=加载指定配置文件。
GOptSelectOptDesc=（可选）指定执行哪套配置，如果配置中的 option 带有空格，则此处需要引号。
GOptTplPathOptDesc=（可选）指定模板文件位置，可以是一个目录也可以是一个文件。
GOptSyntaxOptDesc=指定模板语法，默认为 Liquid, 其他模板引擎待开发。
GOptVarStringOptDesc=（可选）指定变量键值, --var key1=val1 --var key2=val2 可以覆盖配置文件中的默认配置，若未完全覆盖，则会有交互提示输入。
GOptVarJsonFileOptDesc=（可选）指定变量键值来自一个json文件， --var-json-file key1=./path/to/jsonfile --var-json-file key2=./path/to/jsonfile2 可以覆盖配置文件中的默认配置，若未完全覆盖，则会有交互提示输入。
GOptOutputOptDesc=（可选）输出结果到指定位置。未指定则按配置文件执行，配置文件中未配置，则默认输出到./output。
GOptOverrideOptDesc=（可选）输出文件如果已存在，是否覆盖。true 全部覆盖；false 全部跳过；默认会逐个提示。

GFailedErrorResult=生成失败: {0}{1}{2}

GSettingTemplatePathCliPrompt=请输入模板路径
GSettingTemplateVariableValueCliPrompt=请为变量 {0} 赋值
GSettingTemplateVariableValueForJsonFileCliPrompt=请为 Json 变量 {0} 指定路径
GSettingOutputCliPrompt=请指定输出路径

GSettingFileNotFound={0} 不存在! 请先执行 init 命令进行初始化!
GSettingFileContentIsEmpty=配置内容为空，请先更新 {0}
GSettingOptionNotFound=提示: 选项 <{0}> 不存在...
GSettingOptionChoosePrompt=请选择 (Use ↑↓)
GSettingOptionNotFoundError=选项 <{0}> 不存在!